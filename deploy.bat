@echo off
setlocal enabledelayedexpansion

REM Usage:
REM   deploy.bat up         - build and start services
REM   deploy.bat down       - stop services
REM   deploy.bat restart    - restart services
REM   deploy.bat logs [svc] - tail logs (optionally service)
REM   deploy.bat status     - show status
REM   deploy.bat init       - prompt and (re)write .env.deploy

set COMPOSE_FILE=docker-compose.deploy.yml
set ENV_FILE=.env.deploy

REM Default repo info
set GIT_REPO=https://github.com/IAteNoodles/stock_docker.git
set GIT_REF=master

REM Helper: prompt for a variable
set PROMPT_DB_NAME=Postgres DB name [stocks_db]:
set PROMPT_DB_USER=Postgres DB user [stock_user]:
set PROMPT_DB_PASS=Postgres DB password [stock_pass]:
set PROMPT_API_KEYS=Marketstack API keys (comma-separated):

REM Write .env.deploy
:write_env
echo.
echo Configuring %ENV_FILE%...
set /p DB_NAME=%PROMPT_DB_NAME%
if "!DB_NAME!"=="" set DB_NAME=stocks_db
set /p DB_USER=%PROMPT_DB_USER%
if "!DB_USER!"=="" set DB_USER=stock_user
set /p DB_PASS=%PROMPT_DB_PASS%
if "!DB_PASS!"=="" set DB_PASS=stock_pass
set /p MARKETSTACK_API_KEYS=%PROMPT_API_KEYS%

(
    echo # Generated by deploy.bat on %DATE% %TIME%
    echo DB_NAME=!DB_NAME!
    echo DB_USER=!DB_USER!
    echo DB_PASS=!DB_PASS!
    echo.
    echo # Comma-separated API keys for Marketstack
    echo MARKETSTACK_API_KEYS=!MARKETSTACK_API_KEYS!
    echo.
    echo # Repo and ref for the application cloned during image build
    echo GIT_REPO=%GIT_REPO%
    echo GIT_REF=%GIT_REF%
) > %ENV_FILE%
echo Wrote %ENV_FILE%
goto:eof

REM Compose commands
:up
if not exist %ENV_FILE% call :write_env
echo Bringing up stack...
docker compose --env-file %ENV_FILE% -f %COMPOSE_FILE% up -d --build
echo Services started. Dagster UI: http://localhost:33000  API: http://localhost:8000  Postgres: localhost:65432
goto:eof

:down
docker compose --env-file %ENV_FILE% -f %COMPOSE_FILE% down
goto:eof

:restart
docker compose --env-file %ENV_FILE% -f %COMPOSE_FILE% down
docker compose --env-file %ENV_FILE% -f %COMPOSE_FILE% up -d --build
goto:eof

:logs
if "%2"=="" (
    docker compose --env-file %ENV_FILE% -f %COMPOSE_FILE% logs -f --tail=200
) else (
    docker compose --env-file %ENV_FILE% -f %COMPOSE_FILE% logs -f --tail=200 %2
)
goto:eof

:status
docker compose --env-file %ENV_FILE% -f %COMPOSE_FILE% ps
goto:eof

:init
call :write_env
goto:eof

REM Main dispatch
if "%1"=="up"      goto up
if "%1"=="down"    goto down
if "%1"=="restart" goto restart
if "%1"=="logs"    goto logs
if "%1"=="status"  goto status
if "%1"=="init"    goto init

REM Interactive wizard
echo Deploy wizard
echo 1) Init (.env.deploy)
echo 2) Up
echo 3) Down
echo 4) Logs
echo 5) Status
echo 6) Restart
echo 0) Exit
:menu
set /p CHOICE=Select option:
if "%CHOICE%"=="1" call :write_env
if "%CHOICE%"=="2" goto up
if "%CHOICE%"=="3" goto down
if "%CHOICE%"=="4" goto logs
if "%CHOICE%"=="5" goto status
if "%CHOICE%"=="6" goto restart
if "%CHOICE%"=="0" exit /b
goto menu